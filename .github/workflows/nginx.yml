name: Build , TAG and Push NGINX Image to ECR

on:
   workflow_dispatch: 
  #  push:
  #       branches: [main]

env:
  AWS_REGION: ap-south-1  

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Determine version number
      run: |
          LATEST_TAG=$(git describe --abbrev=0 --tags)
          if [[ "$LATEST_TAG" == "" ]]; then
            NEW_TAG="1.0.0"
          else
            SEMVER_REGEX="^v([0-9]+)\.([0-9]+)\.([0-9]+)$"
            if [[ "$LATEST_TAG" =~ $SEMVER_REGEX ]]; then
              MAJOR="${BASH_REMATCH[1]}"
              MINOR="${BASH_REMATCH[2]}"
              PATCH="${BASH_REMATCH[3]}"
              NEW_TAG="v$MAJOR.$MINOR.$((PATCH+1))"
            fi
          fi
          echo "::set-output name=new_tag::$NEW_TAG"
      
    - name: Build Docker image
      env:
        IMAGE_NAME: my-image
        TAG: ${{ steps.determine-version.outputs.new_tag }}
      run: 
          echo $TAG
  
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ env.AWS_REGION }}
  
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, TAG and push NGINX image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: ga-ecs
    #     IMAGE_TAG: ${{ github.run_number }}
    #   run: |
    #     tag_v=$(git describe --tags $(git rev-list --tags --max-count=1))
    #     tag=$(echo $tag_v | sed 's/v//')
    #     docker build -t $REGISTRY/$REPOSITORY:$tag .
    #     docker push $REGISTRY/$REPOSITORY:$tag
